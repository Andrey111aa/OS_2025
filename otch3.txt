Процессы в Linux

Идентификация процессов:
Каждый процесс ОС имеет свой идентификатор
Получить идентификатор процессаможно при помощи системного вызова getpid()
Получить идентификатор родительского процесса можно при помощи системного вызова getppid()
Программа, выводящая на экран идентификаторы текущего и родительского процессов:

avdeev@alexandr-Aspire-Z5751:~/OS_2025$ vim pr003.c

nclude <stdio.h>
#include <sys/types.h>
#include <unistd.h>
#include <stdlib.h>
int main() {
        pid_t procid, parentprocid;
        procid = getpid();
        parentprocid = getppid();
        printf("Ид. текущего процесса: %d\nИд. родительского процесса: %d\n", procid, parentprocid);
        return 0;
}

avdeev@alexandr-Aspire-Z5751:~/OS_2025$ vim pr003.c
avdeev@alexandr-Aspire-Z5751:~/OS_2025$ avdeev@alexandr-Aspire-Z5751:~/OS_2025$ gcc pr003.c -o pr003.out
avdeev@alexandr-Aspire-Z5751:~/OS_2025$ ./pr003.out
Ид. текущего процесса: 9067
Ид. родительского процесса: 7307

При первом запуске программы видим id текущего процесса 9067, id родительского процесса - это id командной оболочки bash
avdeev@alexandr-Aspire-Z5751:~/OS_2025$ ./pr003.out
Ид. текущего процесса: 9180
Ид. родительского процесса: 7307

При втором запуске программы id текущего процесса поменял свое значение, так как аналогичные предыдущие процессы завершились, а новый процесс получил новое значение id - 9180
id родительского процесса не изменилось, так как для запуска программы по-прежнему использовалась ккоманда оболочка bash.
